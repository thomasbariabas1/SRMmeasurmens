package com.example.tom.engineer;

import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;


import com.example.srmmeasurements.R;


public class SafetyInfoTable extends Fragment {
    TextView Fmintext;
    TextView Fmaxtext;
    TextView noise_flagtext;
    TextView dateitext;
    TextView timeitext;
    TextView dataset_versiontext;
    TextView dataset_typetext;
    TextView rbwtext;
    TextView measurements_rangetext;
    TextView unittext;
    TextView result_typetext;
    TextView average_typetext;
    TextView average_timetext;
    TextView no_of_argstext;
    TextView displaytext;
    TextView Axistext;
    TextView service_table_nametext;
    TextView device_serial_notext;
    TextView device_firmware_versiontext;
    TextView total_valuetext;
    TextView total_noise_flagtext;
    TextView other_valuestext;
    TextView thresholdtext;
    TextView noise_thresholdtext;
    TextView noise_threshold_factortext;
    TextView store_modetext;
    TextView antenna_nametext;

    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View rootView = inflater.inflate(R.layout.safetysearchtable, container, false);
        Bundle rs2= getArguments();
        double Fmin;
        double Fmax;
        String noise_flag;
        String datei;
        String timei;
        String dataset_version;
        String dataset_type;
        double rbw;
        double measurements_range;
        String unit;
        String result_type;
        String average_type;
        double average_time;
        String no_of_args;
        String display;
        String Axis;
        String service_table_name;
        String device_serial_no;
        String device_firmware_version;
        double total_value;
        double total_noise_flag;
        double other_values;
        String threshold;
        String noise_threshold;
        String noise_threshold_factor;
        String store_mode;
        String antenna_name;
        Fmin = rs2.getDouble("Fmin");
        Fmax = rs2.getDouble("Fmax");
        noise_flag = rs2.getString("noise_flag");

        datei=rs2.getString("date");
        timei=rs2.getString("time");
        dataset_version = rs2.getString("dataset_version");
        dataset_type = rs2.getString("dataset_type");
        rbw = rs2.getDouble("rbw");
        measurements_range = rs2.getDouble("measurements_range");
        unit = rs2.getString("unit");
        result_type = rs2.getString("result_type");
        average_type = rs2.getString("average_type");
        average_time = rs2.getDouble("average_time");
        no_of_args = rs2.getString("no_of_args");
        display = rs2.getString("display");
        Axis = rs2.getString("axis");
        service_table_name = rs2.getString("service_table_name");
        device_serial_no = rs2.getString("device_serial_no");
        device_firmware_version = rs2.getString("device_firmware_version");
        total_value = rs2.getDouble("total_value");
        total_noise_flag=rs2.getDouble("total_noise_flag");
        other_values=rs2.getDouble("other_values");
        threshold = rs2.getString("threshold");
        noise_threshold = rs2.getString("noise_threshold");
        noise_threshold_factor = rs2.getString("noise_threshold_flag");
        store_mode=rs2.getString("store_mode");
        antenna_name=rs2.getString("antenna_name");
        noise_flagtext = (TextView) rootView.findViewById(R.id.othernoiseflag);
        displaytext=(TextView) rootView.findViewById(R.id.displaysafety);
        device_serial_notext=(TextView) rootView.findViewById(R.id.deviceserialno);
        device_firmware_versiontext=(TextView) rootView.findViewById(R.id.devicefirmwareversion);
        total_valuetext=(TextView) rootView.findViewById(R.id.totalvalue);
        total_noise_flagtext=(TextView) rootView.findViewById(R.id.totalnoiseflag);
        other_valuestext=(TextView) rootView.findViewById(R.id.othervalues);
        store_modetext=(TextView) rootView.findViewById(R.id.storemode);
        dataset_versiontext=(TextView) rootView.findViewById(R.id.datasetv);
        dataset_typetext=(TextView) rootView.findViewById(R.id.datasett);
        store_modetext=(TextView) rootView.findViewById(R.id.storemode);
        dateitext=(TextView) rootView.findViewById(R.id.date);
        timeitext=(TextView) rootView.findViewById(R.id.time);
        Fmintext=(TextView) rootView.findViewById(R.id.fmin1);
        Fmaxtext=(TextView) rootView.findViewById(R.id.fmax1);
        rbwtext=(TextView) rootView.findViewById(R.id.rbw);
        measurements_rangetext=(TextView) rootView.findViewById(R.id.measurementsrange);
        unittext=(TextView) rootView.findViewById(R.id.unit);
        average_typetext=(TextView) rootView.findViewById(R.id.averagetype);
        average_timetext=(TextView) rootView.findViewById(R.id.averagetime);
        no_of_argstext=(TextView) rootView.findViewById(R.id.noofaverages);
        thresholdtext=(TextView) rootView.findViewById(R.id.threshold);
        Axistext=(TextView) rootView.findViewById(R.id.axis);
        service_table_nametext=(TextView) rootView.findViewById(R.id.servicetablename);
        antenna_nametext=(TextView) rootView.findViewById(R.id.antennaname);
        result_typetext=(TextView) rootView.findViewById(R.id.resulttype);
        noise_threshold_factortext=(TextView) rootView.findViewById(R.id.noisethresholdfactor);
        noise_thresholdtext=(TextView) rootView.findViewById(R.id.noisethreshold);
        displaytext.setText(display);
        store_modetext.setText(store_mode);
        dataset_versiontext.setText(dataset_version);
        dataset_typetext.setText(dataset_type);
        store_modetext.setText(store_mode);
        dateitext.setText(datei);
        timeitext.setText(timei);
        Fmintext.setText(Double.toString(Fmin));
        Fmaxtext.setText(Double.toString(Fmax));
        rbwtext.setText(Double.toString(rbw));
        measurements_rangetext.setText(Double.toString(measurements_range));
        unittext.setText(unit);
        average_typetext.setText(average_type);
        average_timetext.setText(Double.toString(average_time));
        no_of_argstext.setText(no_of_args);
        thresholdtext.setText(threshold);
        Axistext.setText(Axis);
        service_table_nametext.setText(service_table_name);
        antenna_nametext.setText(antenna_name);
        result_typetext.setText(result_type);
        noise_flagtext.setText(noise_flag);
        device_serial_notext.setText(device_serial_no);
        device_firmware_versiontext.setText(device_firmware_version);
        total_valuetext.setText(String.valueOf(total_value));
        total_noise_flagtext.setText(String.valueOf(total_noise_flag));
        other_valuestext.setText(String.valueOf(other_values));
        noise_thresholdtext.setText(noise_threshold);
        noise_threshold_factortext.setText(noise_threshold_factor);
        return rootView;
    }
    public interface OnRefreshListener {
        public void onRefresh();
    }
}
